import { Credits, CreditsType } from './credits';
import { CreditsModel, CreditsDocument } from './credits.schema';

export class CreditsRepository {
  public async create(credits: Credits): Promise<Credits> {
    const doc = new CreditsModel(credits);
    await doc.save();
    return Credits.fromDocument(doc.toObject());
  }

  public async findById(id: number): Promise<Credits | null> {
    const doc = await CreditsModel.findOne({ movieId: id }).exec();
    if (!doc) {
      return null;
    }
    return Credits.fromDocument(doc.toObject());
  }

  public async update(credits: Credits): Promise<Credits | null> {
    const doc = await CreditsModel.findOneAndUpdate(
      { movieId: credits.movieId },
      credits,
      { new: true }
    ).exec();
    if (!doc) {
      return null;
    }
    return Credits.fromDocument(doc.toObject());
  }

  public async delete(id: number): Promise<void> {
    await CreditsModel.deleteOne({ movieId: id }).exec();
  }
}
